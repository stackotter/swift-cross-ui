{"variants":[{"paths":["\/documentation\/swiftcrossui\/state-basics"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"article","schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"These concepts form the foundation of SwiftCrossUI’s reactivity."}]},{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","isActive":true,"type":"reference"},{"text":" property wrapper to store state within your apps, scenes,","type":"text"},{"text":" ","type":"text"},{"text":"and views. State generally trickles down through your view hierarchies. Variables","type":"text"},{"text":" ","type":"text"},{"text":"without the ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","isActive":true,"type":"reference"},{"text":" annotation aren’t reactive.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For situations where you need data to trickle back up again, use ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","isActive":true},{"text":" ","type":"text"},{"text":"(think mutable references to state).","type":"text"}]}]}],"metadata":{"modules":[{"name":"SwiftCrossUI"}],"role":"collectionGroup","title":"State basics","roleHeading":"API Collection"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State-basics"},"topicSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"],"anchor":"Topics"}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Environment","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Preferences"],"generated":true,"title":"State","anchor":"State"}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"url":"\/documentation\/swiftcrossui\/publisher","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Publisher"}],"abstract":[{"text":"A type that produces valueless observations.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Publisher"}],"title":"Publisher","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"url":"\/documentation\/swiftcrossui","type":"topic","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","title":"SwiftCrossUI","kind":"symbol","role":"collection"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"role":"symbol","url":"\/documentation\/swiftcrossui\/observableobject","title":"ObservableObject","abstract":[{"type":"text","text":"An object that can be observed for changes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"navigatorTitle":[{"text":"State","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","abstract":[],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftcrossui\/state","title":"State","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Preferences":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Preferences","kind":"article","abstract":[],"role":"collectionGroup","title":"Preferences","type":"topic","url":"\/documentation\/swiftcrossui\/preferences"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"navigatorTitle":[{"kind":"identifier","text":"Binding"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Binding"}],"abstract":[{"type":"text","text":"A value that can read and write a value owned by a source of truth. Can be thought of"},{"type":"text","text":" "},{"type":"text","text":"as a writable reference to the value."}],"url":"\/documentation\/swiftcrossui\/binding","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","type":"topic","title":"Binding"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":", its "},{"type":"codeVoice","code":"didChange"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"title":"Published","navigatorTitle":[{"kind":"identifier","text":"Published"}],"url":"\/documentation\/swiftcrossui\/published","role":"symbol","type":"topic","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"kind":"symbol","abstract":[{"text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets","type":"text"},{"text":" ","type":"text"},{"text":"deinit’d by ARC). Protects against calling the action twice.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cancellable","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Cancellable","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/cancellable","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable","title":"Cancellable","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Environment":{"title":"Environment","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Environment","url":"\/documentation\/swiftcrossui\/environment","kind":"article","role":"collectionGroup","abstract":[]}}}