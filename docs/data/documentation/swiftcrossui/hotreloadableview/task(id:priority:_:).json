{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/hotreloadableview\/task(id:priority:_:)"]}],"kind":"symbol","abstract":[{"type":"text","text":"Starts a task before a view appears (but after "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","isActive":true},{"type":"text","text":" has been"},{"type":"text","text":" "},{"type":"text","text":"accessed), and cancels the task when the view disappears. Additionally,"},{"type":"text","text":" "},{"type":"text","text":"if "},{"code":"id","type":"codeVoice"},{"type":"text","text":" changes the current task is cancelled and a new one is started."}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"task","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Id","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Id","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"priority","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:ScP","text":"TaskPriority","kind":"typeIdentifier"},{"text":", () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI4ViewP","text":"View","kind":"typeIdentifier"}],"remoteSource":{"fileName":"TaskModifier.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Views\/Modifiers\/Lifecycle\/TaskModifier.swift#L9"},"modules":[{"name":"SwiftCrossUI"}],"roleHeading":"Instance Method","extendedModule":"SwiftCrossUI","symbolKind":"method","title":"task(id:priority:_:)","role":"symbol","externalID":"s:12SwiftCrossUI4ViewPAAE4task2id8priority_Qrqd___ScPyyYactSQRd__lF::SYNTHESIZED::s:12SwiftCrossUI17HotReloadableViewV"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/task(id:priority:_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"task","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Id","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Id","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"priority","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:ScP","text":"TaskPriority","kind":"typeIdentifier"},{"text":" = .userInitiated, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"action","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI4ViewP","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","text":"View","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Id","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SQ","text":"Equatable","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This variant of ","type":"text"},{"code":"task","type":"codeVoice"},{"text":" can be useful when the lifetime of the task","type":"text"},{"text":" ","type":"text"},{"text":"must be linked to a value with a potentially shorter lifetime than the","type":"text"},{"text":" ","type":"text"},{"text":"view.","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView"]]},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"type":"topic","role":"collection","title":"SwiftCrossUI","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","kind":"symbol","url":"\/documentation\/swiftcrossui"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"title":"View","role":"symbol","abstract":[{"type":"text","text":"A view that can be rendered by any backend."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"View"}],"type":"topic","url":"\/documentation\/swiftcrossui\/view","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"View"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa","kind":"typeIdentifier","text":"Content"}],"type":"topic","title":"body","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","kind":"symbol","url":"\/documentation\/swiftcrossui\/view\/body","defaultImplementations":1,"abstract":[{"type":"text","text":"The view’s contents."}],"required":true},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView/task(id:priority:_:)":{"abstract":[{"text":"Starts a task before a view appears (but after ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","type":"reference","isActive":true},{"text":" has been","type":"text"},{"text":" ","type":"text"},{"text":"accessed), and cancels the task when the view disappears. Additionally,","type":"text"},{"text":" ","type":"text"},{"text":"if ","type":"text"},{"code":"id","type":"codeVoice"},{"text":" changes the current task is cancelled and a new one is started.","type":"text"}],"type":"topic","url":"\/documentation\/swiftcrossui\/hotreloadableview\/task(id:priority:_:)","title":"task(id:priority:_:)","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/task(id:priority:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"task"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Id"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Id"},{"kind":"text","text":", "},{"kind":"externalParam","text":"priority"},{"kind":"text","text":": "},{"preciseIdentifier":"s:ScP","kind":"typeIdentifier","text":"TaskPriority"},{"kind":"text","text":", () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:12SwiftCrossUI4ViewP","kind":"typeIdentifier","text":"View"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"url":"\/documentation\/swiftcrossui\/hotreloadableview","type":"topic","abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"title":"HotReloadableView","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HotReloadableView"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","navigatorTitle":[{"kind":"identifier","text":"HotReloadableView"}],"kind":"symbol"}}}