{"identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","interfaceLanguage":"swift"},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"OptionalView"}],"externalID":"s:12SwiftCrossUI12OptionalViewV","title":"OptionalView","role":"symbol","modules":[{"name":"SwiftCrossUI"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalView"}],"symbolKind":"struct","remoteSource":{"fileName":"OptionalView.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Views\/OptionalView.swift#L2"},"roleHeading":"Structure"},"kind":"symbol","abstract":[{"type":"text","text":"A view used by "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","type":"reference","isActive":true},{"type":"text","text":" to support non-exhaustive if statements."}],"topicSections":[{"generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView\/body"],"anchor":"Instance-Properties","title":"Instance Properties"},{"generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView\/View-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalView"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"View","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","preciseIdentifier":"s:12SwiftCrossUI4ViewP"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/optionalview"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"]}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/SwiftCrossUI\/s8CopyableP","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View"],"title":"Conforms To"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView":{"url":"\/documentation\/swiftcrossui\/optionalview","kind":"symbol","title":"OptionalView","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","type":"topic","navigatorTitle":[{"text":"OptionalView","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalView","kind":"identifier"}],"abstract":[{"type":"text","text":"A view used by "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","isActive":true},{"type":"text","text":" to support non-exhaustive if statements."}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView/body":{"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView\/body","type":"topic","abstract":[],"url":"\/documentation\/swiftcrossui\/optionalview\/body","role":"symbol","title":"body","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EmptyView","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI9EmptyViewV"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget":{"url":"\/documentation\/swiftcrossui\/anywidget","type":"topic","navigatorTitle":[{"text":"AnyWidget","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A type-erased widget which can be stored without having to propagate"},{"type":"text","text":" "},{"type":"text","text":"the selected backend type through the type system of the whole view graph"},{"type":"text","text":" "},{"type":"text","text":"system of types, which would leak it back into user view implementations"},{"type":"text","text":" "},{"type":"text","text":"making the backend hard to switch for developers."}],"title":"AnyWidget","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyWidget","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"title":"ObservableObject","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","abstract":[{"type":"text","text":"An object that can be observed for changes."}],"url":"\/documentation\/swiftcrossui\/observableobject","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView/View-Implementations":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView\/View-Implementations","type":"topic","url":"\/documentation\/swiftcrossui\/optionalview\/view-implementations","title":"View Implementations","kind":"article","abstract":[],"role":"collectionGroup"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView":{"navigatorTitle":[{"text":"EmptyView","kind":"identifier"}],"abstract":[{"text":"A placeholder view used by elementary ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","type":"reference","isActive":true},{"text":" implementations which don’t have bodies. Fatally","type":"text"},{"text":" ","type":"text"},{"text":"crashes if rendered.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/emptyview","title":"EmptyView","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmptyView","kind":"identifier"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View-graph":{"url":"\/documentation\/swiftcrossui\/view-graph","abstract":[],"type":"topic","title":"View graph","role":"collectionGroup","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","kind":"article"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder":{"type":"topic","url":"\/documentation\/swiftcrossui\/viewbuilder","navigatorTitle":[{"text":"ViewBuilder","kind":"identifier"}],"role":"symbol","title":"ViewBuilder","abstract":[{"text":"A result builder used to compose views together into composite views in","type":"text"},{"text":" ","type":"text"},{"text":"a declarative manner.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewBuilder","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize":{"navigatorTitle":[{"kind":"identifier","text":"ViewSize"}],"role":"symbol","url":"\/documentation\/swiftcrossui\/viewsize","type":"topic","title":"ViewSize","abstract":[{"type":"text","text":"The size of a view. Includes ideal size, and minimum\/maximum width and height"},{"type":"text","text":" "},{"type":"text","text":"along with the size you’d expect."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewSize"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol":{"type":"topic","url":"\/documentation\/swiftcrossui\/publishedmarkerprotocol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","title":"PublishedMarkerProtocol","kind":"symbol","abstract":[{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference","isActive":true},{"text":" values nested within an ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference","isActive":true},{"text":" object","type":"text"},{"text":" ","type":"text"},{"text":"will only have their changes published by the parent ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"if marked with this marker protocol. This avoids uncertainty around which","type":"text"},{"text":" ","type":"text"},{"text":"properties will or will not have their changes published by the parent.","type":"text"},{"text":" ","type":"text"},{"text":"For clarity reasons, you shouldn’t conform your own types to this protocol.","type":"text"},{"text":" ","type":"text"},{"text":"Instead, apply the ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","type":"reference","isActive":true},{"text":" property wrapper when needed.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PublishedMarkerProtocol","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"PublishedMarkerProtocol","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult":{"url":"\/documentation\/swiftcrossui\/viewupdateresult","kind":"symbol","role":"symbol","abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","title":"ViewUpdateResult","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewUpdateResult","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"ViewUpdateResult","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Published"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","kind":"symbol","abstract":[{"text":"A wrapper which publishes a change whenever the wrapped value is set. If","type":"text"},{"text":" ","type":"text"},{"text":"the wrapped value is ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference"},{"text":", its ","type":"text"},{"code":"didChange","type":"codeVoice"},{"text":" publisher will","type":"text"},{"text":" ","type":"text"},{"text":"also be forwarded to the wrapper’s publisher.","type":"text"}],"type":"topic","title":"Published","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"url":"\/documentation\/swiftcrossui\/published"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"type":"topic","title":"HotReloadableView","abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HotReloadableView","kind":"identifier"}],"navigatorTitle":[{"text":"HotReloadableView","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/hotreloadableview","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","kind":"symbol"},"doc://SwiftCrossUI/s8CopyableP":{"identifier":"doc:\/\/SwiftCrossUI\/s8CopyableP","type":"unresolvable","title":"Swift.Copyable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"url":"\/documentation\/swiftcrossui\/dynamicproperty","abstract":[{"type":"text","text":"A property wrapper updated by the view graph before each access to"},{"type":"text","text":" "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","type":"reference","isActive":true},{"type":"text","text":". Conforming types should use internal mutability (see "},{"type":"codeVoice","code":"Box"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"to implement this protocol’s non-mutable methods if required. This"},{"type":"text","text":" "},{"type":"text","text":"protocol avoids mutation to allow state properties and such to be"},{"type":"text","text":" "},{"type":"text","text":"captured even though views are structs."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","kind":"symbol","type":"topic","title":"DynamicProperty","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicProperty"}],"navigatorTitle":[{"kind":"identifier","text":"DynamicProperty"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView":{"type":"topic","url":"\/documentation\/swiftcrossui\/eitherview","abstract":[{"text":"A view used by ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","type":"reference","isActive":true},{"text":" to support if\/else conditional statements.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EitherView","kind":"identifier"}],"navigatorTitle":[{"text":"EitherView","kind":"identifier"}],"title":"EitherView","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem":{"url":"\/documentation\/swiftcrossui\/layoutsystem","abstract":[],"title":"LayoutSystem","type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutSystem"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LayoutSystem"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa","text":"Content","kind":"typeIdentifier"}],"kind":"symbol","defaultImplementations":1,"url":"\/documentation\/swiftcrossui\/view\/body","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","abstract":[{"type":"text","text":"The view’s contents."}],"required":true,"type":"topic","title":"body","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene-graph":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph","abstract":[],"title":"Scene graph","role":"collectionGroup","kind":"article","url":"\/documentation\/swiftcrossui\/scene-graph","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"url":"\/documentation\/swiftcrossui","role":"collection","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"kind":"symbol","title":"SwiftCrossUI","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"title":"View","url":"\/documentation\/swiftcrossui\/view","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"View"}],"abstract":[{"text":"A view that can be rendered by any backend.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"View"}]}}}