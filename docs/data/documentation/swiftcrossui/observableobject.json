{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"metadata":{"remoteSource":{"fileName":"ObservableObject.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/State\/ObservableObject.swift#L60"},"roleHeading":"Protocol","title":"ObservableObject","role":"symbol","modules":[{"name":"SwiftCrossUI"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"}],"symbolKind":"protocol","externalID":"s:12SwiftCrossUI16ObservableObjectP","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}]},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"]}],"topicSections":[{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange"],"generated":true}],"variants":[{"paths":["\/documentation\/swiftcrossui\/observableobject"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},"abstract":[{"type":"text","text":"An object that can be observed for changes."}],"relationshipsSections":[{"type":"conformingTypes","title":"Conforming Types","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"],"kind":"relationships"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"},{"kind":"text","text":" : AnyObject"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"The default implementation only publishes changes made to properties that","type":"text"},{"text":" ","type":"text"},{"text":"have been wrapped with the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"},{"text":" property wrapper. Even properties","type":"text"},{"text":" ","type":"text"},{"text":"that themselves conform to ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"text":" must be wrapped with the","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"},{"text":" property wrapper for clarity.","type":"text"}],"type":"paragraph"},{"code":["class NestedState: ObservableObject {","    \/\/ Both `startIndex` and `endIndex` will have their changes published to `NestedState`'s","    \/\/ `didChange` publisher.","    @Published","    var startIndex = 0","","    @Published","    var endIndex = 0","}","","class CounterState: ObservableObject {","    \/\/ Only changes to `count` will be published (it is the only property with `@Published`)","    @Published","    var count = 0","","    var otherCount = 0","","    \/\/ Even though `nested` is `ObservableObject`, its changes won't be","    \/\/ published because if you could have observed properties without","    \/\/ `@Published` things would get pretty messy and you'd always have to","    \/\/ check the definition of the type of each property to know exactly","    \/\/ what would and wouldn't cause updates.","    var nested = NestedState()","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"To use an observable object as part of a view’s state, use the "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","isActive":true},{"type":"text","text":" property"},{"type":"text","text":" "},{"type":"text","text":"wrapper. It’ll detect that it’s been given an observable and will forward any"},{"type":"text","text":" "},{"type":"text","text":"observations published by the object’s "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange","isActive":true},{"type":"text","text":" publisher."}],"type":"paragraph"},{"code":["class CounterState: ObservableObject {","    @Published var count = 0","}","","struct CounterView: View {","    @State var state = CounterState()","","    var body: some View {","        HStack {","            Button(\"-\") {","                state.count -= 1","            }","            Text(\"Count: \\(state.count)\")","            Button(\"+\") {","                state.count += 1","            }","        }","    }","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"title":"Binding","abstract":[{"type":"text","text":"A value that can read and write a value owned by a source of truth. Can be thought of"},{"type":"text","text":" "},{"type":"text","text":"as a writable reference to the value."}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/binding","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Binding"}],"navigatorTitle":[{"kind":"identifier","text":"Binding"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"url":"\/documentation\/swiftcrossui","role":"collection","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"kind":"symbol","title":"SwiftCrossUI","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","url":"\/documentation\/swiftcrossui\/publisher","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Publisher"}],"navigatorTitle":[{"kind":"identifier","text":"Publisher"}],"abstract":[{"text":"A type that produces valueless observations.","type":"text"}],"role":"symbol","title":"Publisher"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Published"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","kind":"symbol","abstract":[{"text":"A wrapper which publishes a change whenever the wrapped value is set. If","type":"text"},{"text":" ","type":"text"},{"text":"the wrapped value is ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference"},{"text":", its ","type":"text"},{"code":"didChange","type":"codeVoice"},{"text":" publisher will","type":"text"},{"text":" ","type":"text"},{"text":"also be forwarded to the wrapper’s publisher.","type":"text"}],"type":"topic","title":"Published","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"url":"\/documentation\/swiftcrossui\/published"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"title":"State","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"State"}],"kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"url":"\/documentation\/swiftcrossui\/state"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"title":"ObservableObject","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","abstract":[{"type":"text","text":"An object that can be observed for changes."}],"url":"\/documentation\/swiftcrossui\/observableobject","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject/didChange":{"title":"didChange","url":"\/documentation\/swiftcrossui\/observableobject\/didchange","required":true,"defaultImplementations":1,"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didChange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Publisher","preciseIdentifier":"s:12SwiftCrossUI9PublisherC","kind":"typeIdentifier"}],"abstract":[{"text":"A publisher which publishes changes made to the object. Only publishes changes made to","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","type":"reference"},{"text":" properties by default.","type":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cancellable"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable","navigatorTitle":[{"kind":"identifier","text":"Cancellable"}],"abstract":[{"text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets","type":"text"},{"text":" ","type":"text"},{"text":"deinit’d by ARC). Protects against calling the action twice.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/cancellable","type":"topic","title":"Cancellable"}}}