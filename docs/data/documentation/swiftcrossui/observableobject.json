{"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"},{"text":" : AnyObject","kind":"text"}],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"type":"text","text":"The default implementation only publishes changes made to properties that"},{"type":"text","text":" "},{"type":"text","text":"have been wrapped with the "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","isActive":true},{"type":"text","text":" property wrapper. Even properties"},{"type":"text","text":" "},{"type":"text","text":"that themselves conform to "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":" must be wrapped with the"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","isActive":true},{"type":"text","text":" property wrapper for clarity."}],"type":"paragraph"},{"syntax":"swift","code":["class NestedState: ObservableObject {","    \/\/ Both `startIndex` and `endIndex` will have their changes published to `NestedState`'s","    \/\/ `didChange` publisher.","    @Published","    var startIndex = 0","","    @Published","    var endIndex = 0","}","","class CounterState: ObservableObject {","    \/\/ Only changes to `count` will be published (it is the only property with `@Published`)","    @Published","    var count = 0","","    var otherCount = 0","","    \/\/ Even though `nested` is `ObservableObject`, its changes won't be","    \/\/ published because if you could have observed properties without","    \/\/ `@Published` things would get pretty messy and you'd always have to","    \/\/ check the definition of the type of each property to know exactly","    \/\/ what would and wouldn't cause updates.","    var nested = NestedState()","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"To use an observable object as part of a view’s state, use the "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","isActive":true},{"type":"text","text":" property"},{"type":"text","text":" "},{"type":"text","text":"wrapper. It’ll detect that it’s been given an observable and will forward any"},{"type":"text","text":" "},{"type":"text","text":"observations published by the object’s "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange","isActive":true},{"type":"text","text":" publisher."}],"type":"paragraph"},{"syntax":"swift","code":["class CounterState: ObservableObject {","    @Published var count = 0","}","","struct CounterView: View {","    @State var state = CounterState()","","    var body: some View {","        HStack {","            Button(\"-\") {","                state.count -= 1","            }","            Text(\"Count: \\(state.count)\")","            Button(\"+\") {","                state.count += 1","            }","        }","    }","}"],"type":"codeListing"}],"kind":"content"}],"metadata":{"modules":[{"name":"SwiftCrossUI"}],"symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"}],"navigatorTitle":[{"text":"ObservableObject","kind":"identifier"}],"remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/State\/ObservableObject.swift#L60","fileName":"ObservableObject.swift"},"role":"symbol","title":"ObservableObject","externalID":"s:12SwiftCrossUI16ObservableObjectP","roleHeading":"Protocol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/observableobject"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"abstract":[{"text":"An object that can be observed for changes.","type":"text"}],"relationshipsSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"],"title":"Conforming Types","kind":"relationships","type":"conformingTypes"}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"State","kind":"identifier"}],"type":"topic","title":"State","url":"\/documentation\/swiftcrossui\/state","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"url":"\/documentation\/swiftcrossui\/observableobject","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"}],"navigatorTitle":[{"text":"ObservableObject","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","title":"ObservableObject","type":"topic","abstract":[{"type":"text","text":"An object that can be observed for changes."}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Published","kind":"identifier"}],"title":"Published","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","navigatorTitle":[{"text":"Published","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftcrossui\/published","abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":", its "},{"type":"codeVoice","code":"didChange"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Binding","kind":"identifier"}],"title":"Binding","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"Binding","kind":"identifier"}],"abstract":[{"type":"text","text":"A value that can read and write a value owned by a source of truth. Can be thought of"},{"type":"text","text":" "},{"type":"text","text":"as a writable reference to the value."}],"url":"\/documentation\/swiftcrossui\/binding"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"type":"topic","kind":"symbol","navigatorTitle":[{"text":"Cancellable","kind":"identifier"}],"title":"Cancellable","role":"symbol","url":"\/documentation\/swiftcrossui\/cancellable","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cancellable","kind":"identifier"}],"abstract":[{"type":"text","text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets"},{"type":"text","text":" "},{"type":"text","text":"deinit’d by ARC). Protects against calling the action twice."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject/didChange":{"type":"topic","title":"didChange","url":"\/documentation\/swiftcrossui\/observableobject\/didchange","abstract":[{"type":"text","text":"A publisher which publishes changes made to the object. Only publishes changes made to"},{"type":"text","text":" "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","isActive":true,"type":"reference"},{"type":"text","text":" properties by default."}],"role":"symbol","defaultImplementations":1,"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"didChange"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12SwiftCrossUI9PublisherC","kind":"typeIdentifier","text":"Publisher"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange","required":true},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"role":"symbol","title":"Publisher","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Publisher","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that produces valueless observations."}],"navigatorTitle":[{"text":"Publisher","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/publisher"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"kind":"symbol","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"role":"collection","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","title":"SwiftCrossUI","url":"\/documentation\/swiftcrossui"}}}