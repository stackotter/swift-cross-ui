{"relationshipsSections":[{"title":"Conforming Types","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"],"kind":"relationships","type":"conformingTypes"}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"sections":[],"identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"],"generated":true}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"remoteSource":{"fileName":"ObservableObject.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/State\/ObservableObject.swift#L60"},"role":"symbol","roleHeading":"Protocol","modules":[{"name":"SwiftCrossUI"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"}],"navigatorTitle":[{"text":"ObservableObject","kind":"identifier"}],"title":"ObservableObject","symbolKind":"protocol","externalID":"s:12SwiftCrossUI16ObservableObjectP"},"abstract":[{"text":"An object that can be observed for changes.","type":"text"}],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange"],"anchor":"Instance-Properties","generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"},{"text":" : AnyObject","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The default implementation only publishes changes made to properties that","type":"text"},{"text":" ","type":"text"},{"text":"have been wrapped with the ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","isActive":true,"type":"reference"},{"text":" property wrapper. Even properties","type":"text"},{"text":" ","type":"text"},{"text":"that themselves conform to ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true,"type":"reference"},{"text":" must be wrapped with the","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","isActive":true,"type":"reference"},{"text":" property wrapper for clarity.","type":"text"}]},{"type":"codeListing","code":["class NestedState: ObservableObject {","    \/\/ Both `startIndex` and `endIndex` will have their changes published to `NestedState`'s","    \/\/ `didChange` publisher.","    @Published","    var startIndex = 0","","    @Published","    var endIndex = 0","}","","class CounterState: ObservableObject {","    \/\/ Only changes to `count` will be published (it is the only property with `@Published`)","    @Published","    var count = 0","","    var otherCount = 0","","    \/\/ Even though `nested` is `ObservableObject`, its changes won't be","    \/\/ published because if you could have observed properties without","    \/\/ `@Published` things would get pretty messy and you'd always have to","    \/\/ check the definition of the type of each property to know exactly","    \/\/ what would and wouldn't cause updates.","    var nested = NestedState()","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"To use an observable object as part of a view’s state, use the ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","isActive":true},{"text":" property","type":"text"},{"text":" ","type":"text"},{"text":"wrapper. It’ll detect that it’s been given an observable and will forward any","type":"text"},{"text":" ","type":"text"},{"text":"observations published by the object’s ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange","isActive":true},{"text":" publisher.","type":"text"}]},{"type":"codeListing","code":["class CounterState: ObservableObject {","    @Published var count = 0","}","","struct CounterView: View {","    @State var state = CounterState()","","    var body: some View {","        HStack {","            Button(\"-\") {","                state.count -= 1","            }","            Text(\"Count: \\(state.count)\")","            Button(\"+\") {","                state.count += 1","            }","        }","    }","}"],"syntax":"swift"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/observableobject"]}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":", its "},{"type":"codeVoice","code":"didChange"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"title":"Published","navigatorTitle":[{"kind":"identifier","text":"Published"}],"url":"\/documentation\/swiftcrossui\/published","role":"symbol","type":"topic","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"kind":"symbol","abstract":[{"text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets","type":"text"},{"text":" ","type":"text"},{"text":"deinit’d by ARC). Protects against calling the action twice.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cancellable","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Cancellable","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/cancellable","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable","title":"Cancellable","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject/didChange":{"abstract":[{"text":"A publisher which publishes changes made to the object. Only publishes changes made to","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"},{"text":" properties by default.","type":"text"}],"kind":"symbol","type":"topic","title":"didChange","url":"\/documentation\/swiftcrossui\/observableobject\/didchange","required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"didChange"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Publisher","preciseIdentifier":"s:12SwiftCrossUI9PublisherC"}],"defaultImplementations":1,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"navigatorTitle":[{"kind":"identifier","text":"Binding"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Binding"}],"abstract":[{"type":"text","text":"A value that can read and write a value owned by a source of truth. Can be thought of"},{"type":"text","text":" "},{"type":"text","text":"as a writable reference to the value."}],"url":"\/documentation\/swiftcrossui\/binding","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","type":"topic","title":"Binding"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"role":"symbol","url":"\/documentation\/swiftcrossui\/observableobject","title":"ObservableObject","abstract":[{"type":"text","text":"An object that can be observed for changes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"navigatorTitle":[{"text":"State","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","abstract":[],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftcrossui\/state","title":"State","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"url":"\/documentation\/swiftcrossui\/publisher","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Publisher"}],"abstract":[{"text":"A type that produces valueless observations.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Publisher"}],"title":"Publisher","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"url":"\/documentation\/swiftcrossui","type":"topic","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","title":"SwiftCrossUI","kind":"symbol","role":"collection"}}}