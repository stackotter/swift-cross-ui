{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">","kind":"text"}],"platforms":["macOS"]}]}],"topicSections":[{"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/init(wrappedValue:)"],"generated":true},{"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/projectedValue","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/wrappedValue"],"generated":true},{"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/update(with:previousValue:)"],"generated":true}],"variants":[{"paths":["\/documentation\/swiftcrossui\/state"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"],"generated":true}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"role":"symbol","roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"navigatorTitle":[{"text":"State","kind":"identifier"}],"modules":[{"name":"SwiftCrossUI"}],"remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/State\/State.swift#L8","fileName":"State.swift"},"symbolKind":"struct","title":"State","externalID":"s:12SwiftCrossUI5StateV"},"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State"},"sections":[],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty"],"type":"conformsTo"}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"type":"topic","navigatorTitle":[{"text":"DynamicProperty","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","role":"symbol","url":"\/documentation\/swiftcrossui\/dynamicproperty","kind":"symbol","title":"DynamicProperty","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicProperty","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper updated by the view graph before each access to"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","isActive":true},{"type":"text","text":". Conforming types should use internal mutability (see "},{"type":"codeVoice","code":"Box"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"to implement this protocol’s non-mutable methods if required. This"},{"type":"text","text":" "},{"type":"text","text":"protocol avoids mutation to allow state properties and such to be"},{"type":"text","text":" "},{"type":"text","text":"captured even though views are structs."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"defaultImplementations":1,"abstract":[{"text":"The view’s contents.","type":"text"}],"title":"body","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","url":"\/documentation\/swiftcrossui\/view\/body","required":true,"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Content","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"url":"\/documentation\/swiftcrossui\/publisher","title":"Publisher","type":"topic","abstract":[{"text":"A type that produces valueless observations.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Publisher","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Publisher","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","url":"\/documentation\/swiftcrossui","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"kind":"symbol","type":"topic","role":"collection","title":"SwiftCrossUI"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"kind":"symbol","title":"Binding","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","type":"topic","abstract":[{"type":"text","text":"A value that can read and write a value owned by a source of truth. Can be thought of"},{"type":"text","text":" "},{"type":"text","text":"as a writable reference to the value."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Binding"}],"url":"\/documentation\/swiftcrossui\/binding","navigatorTitle":[{"kind":"identifier","text":"Binding"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State/wrappedValue":{"title":"wrappedValue","url":"\/documentation\/swiftcrossui\/state\/wrappedvalue","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/wrappedValue","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State/update(with:previousValue:)":{"url":"\/documentation\/swiftcrossui\/state\/update(with:previousvalue:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"update"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12SwiftCrossUI17EnvironmentValuesV","kind":"typeIdentifier","text":"EnvironmentValues"},{"kind":"text","text":", "},{"kind":"externalParam","text":"previousValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12SwiftCrossUI5StateV","kind":"typeIdentifier","text":"State"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">?)"}],"title":"update(with:previousValue:)","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/update(with:previousValue:)","abstract":[],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"url":"\/documentation\/swiftcrossui\/state","type":"topic","kind":"symbol","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"navigatorTitle":[{"text":"State","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","title":"State","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State/init(wrappedValue:)":{"title":"init(wrappedValue:)","role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/init(wrappedValue:)","url":"\/documentation\/swiftcrossui\/state\/init(wrappedvalue:)","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"An object that can be observed for changes."}],"url":"\/documentation\/swiftcrossui\/observableobject","title":"ObservableObject","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"navigatorTitle":[{"kind":"identifier","text":"Published"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","url":"\/documentation\/swiftcrossui\/published","abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference","isActive":true},{"type":"text","text":", its "},{"code":"didChange","type":"codeVoice"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"title":"Published","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable","title":"Cancellable","kind":"symbol","abstract":[{"type":"text","text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets"},{"type":"text","text":" "},{"type":"text","text":"deinit’d by ARC). Protects against calling the action twice."}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cancellable","kind":"identifier"}],"navigatorTitle":[{"text":"Cancellable","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/cancellable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State/projectedValue":{"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/projectedValue","url":"\/documentation\/swiftcrossui\/state\/projectedvalue","title":"projectedValue","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI7BindingV","text":"Binding"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"kind":"symbol","abstract":[]}}}