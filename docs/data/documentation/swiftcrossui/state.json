{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/state"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"sections":[],"metadata":{"symbolKind":"struct","remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/State\/State.swift#L8","fileName":"State.swift"},"roleHeading":"Structure","externalID":"s:12SwiftCrossUI5StateV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"modules":[{"name":"SwiftCrossUI"}],"title":"State","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"State"}]},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]}],"topicSections":[{"generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/init(wrappedValue:)"],"anchor":"Initializers","title":"Initializers"},{"generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/projectedValue","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/wrappedValue"],"anchor":"Instance-Properties","title":"Instance Properties"},{"generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/update(with:previousValue:)"],"anchor":"Instance-Methods","title":"Instance Methods"}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty"],"type":"conformsTo","title":"Conforms To"}],"identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/State/init(wrappedValue:)":{"type":"topic","url":"\/documentation\/swiftcrossui\/state\/init(wrappedvalue:)","kind":"symbol","title":"init(wrappedValue:)","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/init(wrappedValue:)","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"title":"body","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","role":"symbol","abstract":[{"type":"text","text":"The view’s contents."}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftcrossui\/view\/body","defaultImplementations":1,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa","text":"Content"}],"required":true},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","navigatorTitle":[{"kind":"identifier","text":"Binding"}],"type":"topic","url":"\/documentation\/swiftcrossui\/binding","kind":"symbol","abstract":[{"text":"A value that can read and write a value owned by a source of truth. Can be thought of","type":"text"},{"text":" ","type":"text"},{"text":"as a writable reference to the value.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Binding"}],"title":"Binding"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"url":"\/documentation\/swiftcrossui\/observableobject","abstract":[{"type":"text","text":"An object that can be observed for changes."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"ObservableObject","kind":"identifier"}],"title":"ObservableObject"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Cancellable"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cancellable"}],"type":"topic","abstract":[{"text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets","type":"text"},{"text":" ","type":"text"},{"text":"deinit’d by ARC). Protects against calling the action twice.","type":"text"}],"kind":"symbol","title":"Cancellable","url":"\/documentation\/swiftcrossui\/cancellable","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"State"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"type":"topic","abstract":[],"kind":"symbol","title":"State","url":"\/documentation\/swiftcrossui\/state","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State/projectedValue":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Binding","preciseIdentifier":"s:12SwiftCrossUI7BindingV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/projectedValue","abstract":[],"url":"\/documentation\/swiftcrossui\/state\/projectedvalue","type":"topic","title":"projectedValue","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","abstract":[{"text":"A type that produces valueless observations.","type":"text"}],"title":"Publisher","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Publisher"}],"type":"topic","url":"\/documentation\/swiftcrossui\/publisher","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Publisher"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"role":"collection","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","title":"SwiftCrossUI","type":"topic","url":"\/documentation\/swiftcrossui","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"title":"DynamicProperty","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicProperty","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/dynamicproperty","type":"topic","abstract":[{"text":"A property wrapper updated by the view graph before each access to","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","type":"reference"},{"text":". Conforming types should use internal mutability (see ","type":"text"},{"code":"Box","type":"codeVoice"},{"text":")","type":"text"},{"text":" ","type":"text"},{"text":"to implement this protocol’s non-mutable methods if required. This","type":"text"},{"text":" ","type":"text"},{"text":"protocol avoids mutation to allow state properties and such to be","type":"text"},{"text":" ","type":"text"},{"text":"captured even though views are structs.","type":"text"}],"navigatorTitle":[{"text":"DynamicProperty","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State/wrappedValue":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/wrappedValue","abstract":[],"kind":"symbol","title":"wrappedValue","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"url":"\/documentation\/swiftcrossui\/state\/wrappedvalue","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"type":"topic","title":"Published","abstract":[{"text":"A wrapper which publishes a change whenever the wrapped value is set. If","type":"text"},{"text":" ","type":"text"},{"text":"the wrapped value is ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true,"type":"reference"},{"text":", its ","type":"text"},{"code":"didChange","type":"codeVoice"},{"text":" publisher will","type":"text"},{"text":" ","type":"text"},{"text":"also be forwarded to the wrapper’s publisher.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Published","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/published","kind":"symbol","navigatorTitle":[{"text":"Published","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State/update(with:previousValue:)":{"role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/update(with:previousValue:)","abstract":[],"type":"topic","kind":"symbol","url":"\/documentation\/swiftcrossui\/state\/update(with:previousvalue:)","title":"update(with:previousValue:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"update"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI17EnvironmentValuesV","text":"EnvironmentValues"},{"kind":"text","text":", "},{"kind":"externalParam","text":"previousValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI5StateV","text":"State"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">?)"}]}}}