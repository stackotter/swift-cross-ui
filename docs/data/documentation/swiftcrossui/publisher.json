{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Publisher","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"],"generated":true}],"metadata":{"symbolKind":"class","title":"Publisher","navigatorTitle":[{"text":"Publisher","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Publisher"}],"roleHeading":"Class","modules":[{"name":"SwiftCrossUI"}],"role":"symbol","remoteSource":{"fileName":"Publisher.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/State\/Publisher.swift#L5"},"externalID":"s:12SwiftCrossUI9PublisherC"},"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/publisher"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher"},"sections":[],"abstract":[{"type":"text","text":"A type that produces valueless observations."}],"topicSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher\/init()"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher\/link(toUpstream:)","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher\/observe(with:)","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher\/send()"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher/link(toUpstream:)":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher\/link(toUpstream:)","title":"link(toUpstream:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"link","kind":"identifier"},{"text":"(","kind":"text"},{"text":"toUpstream","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Publisher","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI9PublisherC"},{"text":") -> ","kind":"text"},{"text":"Cancellable","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI11CancellableC"}],"abstract":[{"text":"Links the publisher to an upstream, meaning that observations from the upstream","type":"text"},{"text":" ","type":"text"},{"text":"effectively get forwarded to all observers of this publisher as well.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/publisher\/link(toupstream:)","type":"topic","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"title":"ObservableObject","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","abstract":[{"type":"text","text":"An object that can be observed for changes."}],"url":"\/documentation\/swiftcrossui\/observableobject","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher/observe(with:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"observe","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI11CancellableC","text":"Cancellable","kind":"typeIdentifier"}],"abstract":[{"text":"Registers a handler to observe future events.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher\/observe(with:)","role":"symbol","type":"topic","url":"\/documentation\/swiftcrossui\/publisher\/observe(with:)","title":"observe(with:)"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher/send()":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"()"}],"kind":"symbol","title":"send()","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher\/send()","url":"\/documentation\/swiftcrossui\/publisher\/send()","abstract":[{"type":"text","text":"Publishes a change to all observers serially on the current thread."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","url":"\/documentation\/swiftcrossui\/publisher","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Publisher"}],"navigatorTitle":[{"kind":"identifier","text":"Publisher"}],"abstract":[{"text":"A type that produces valueless observations.","type":"text"}],"role":"symbol","title":"Publisher"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher/init()":{"type":"topic","url":"\/documentation\/swiftcrossui\/publisher\/init()","title":"init()","abstract":[{"type":"text","text":"Creates a new independent publisher."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher\/init()","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"title":"State","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"State"}],"kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"url":"\/documentation\/swiftcrossui\/state"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"title":"Binding","abstract":[{"type":"text","text":"A value that can read and write a value owned by a source of truth. Can be thought of"},{"type":"text","text":" "},{"type":"text","text":"as a writable reference to the value."}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/binding","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Binding"}],"navigatorTitle":[{"kind":"identifier","text":"Binding"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"url":"\/documentation\/swiftcrossui","role":"collection","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"kind":"symbol","title":"SwiftCrossUI","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cancellable"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable","navigatorTitle":[{"kind":"identifier","text":"Cancellable"}],"abstract":[{"text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets","type":"text"},{"text":" ","type":"text"},{"text":"deinit’d by ARC). Protects against calling the action twice.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/cancellable","type":"topic","title":"Cancellable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Published"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","kind":"symbol","abstract":[{"text":"A wrapper which publishes a change whenever the wrapped value is set. If","type":"text"},{"text":" ","type":"text"},{"text":"the wrapped value is ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference"},{"text":", its ","type":"text"},{"code":"didChange","type":"codeVoice"},{"text":" publisher will","type":"text"},{"text":" ","type":"text"},{"text":"also be forwarded to the wrapper’s publisher.","type":"text"}],"type":"topic","title":"Published","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"url":"\/documentation\/swiftcrossui\/published"}}}