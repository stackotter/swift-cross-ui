{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/emptyview"]}],"abstract":[{"text":"A placeholder view used by elementary ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","isActive":true,"type":"reference"},{"text":" implementations which don’t have bodies. Fatally","type":"text"},{"text":" ","type":"text"},{"text":"crashes if rendered.","type":"text"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView\/init()"],"generated":true,"anchor":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView\/body"],"generated":true,"anchor":"Instance-Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView\/asWidget(_:backend:)","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView\/children(backend:snapshots:environment:)","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView\/layoutableChildren(backend:children:)","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView\/update(_:children:proposedSize:environment:backend:dryRun:)","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView\/updateChildren(_:backend:)"],"generated":true,"anchor":"Instance-Methods"},{"title":"Default Implementations","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView\/View-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","interfaceLanguage":"swift"},"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmptyView","kind":"identifier"}],"navigatorTitle":[{"text":"EmptyView","kind":"identifier"}],"roleHeading":"Structure","symbolKind":"struct","remoteSource":{"fileName":"EmptyView.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Views\/EmptyView.swift#L3"},"modules":[{"name":"SwiftCrossUI"}],"title":"EmptyView","externalID":"s:12SwiftCrossUI9EmptyViewV","role":"symbol"},"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmptyView","kind":"identifier"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/SwiftCrossUI\/s8SendableP","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View"],"type":"conformsTo"}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView/updateChildren(_:backend:)":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView\/updateChildren(_:backend:)","kind":"symbol","title":"updateChildren(_:backend:)","type":"topic","url":"\/documentation\/swiftcrossui\/emptyview\/updatechildren(_:backend:)","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateChildren","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Backend","kind":"genericParameter"},{"text":">(any ","kind":"text"},{"text":"ViewGraphNodeChildren","preciseIdentifier":"s:12SwiftCrossUI21ViewGraphNodeChildrenP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"backend","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Backend","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":", its "},{"type":"codeVoice","code":"didChange"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"title":"Published","navigatorTitle":[{"kind":"identifier","text":"Published"}],"url":"\/documentation\/swiftcrossui\/published","role":"symbol","type":"topic","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicProperty","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/dynamicproperty","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","title":"DynamicProperty","role":"symbol","abstract":[{"type":"text","text":"A property wrapper updated by the view graph before each access to"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","isActive":true},{"type":"text","text":". Conforming types should use internal mutability (see "},{"type":"codeVoice","code":"Box"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"to implement this protocol’s non-mutable methods if required. This"},{"type":"text","text":" "},{"type":"text","text":"protocol avoids mutation to allow state properties and such to be"},{"type":"text","text":" "},{"text":"captured even though views are structs.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"DynamicProperty","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView":{"navigatorTitle":[{"kind":"identifier","text":"OptionalView"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalView"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","type":"topic","abstract":[{"type":"text","text":"A view used by "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","isActive":true},{"type":"text","text":" to support non-exhaustive if statements."}],"url":"\/documentation\/swiftcrossui\/optionalview","title":"OptionalView","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult":{"abstract":[],"url":"\/documentation\/swiftcrossui\/viewupdateresult","type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewUpdateResult"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewUpdateResult"}],"title":"ViewUpdateResult"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget":{"url":"\/documentation\/swiftcrossui\/anywidget","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","title":"AnyWidget","abstract":[{"type":"text","text":"A type-erased widget which can be stored without having to propagate"},{"type":"text","text":" "},{"type":"text","text":"the selected backend type through the type system of the whole view graph"},{"type":"text","text":" "},{"type":"text","text":"system of types, which would leak it back into user view implementations"},{"type":"text","text":" "},{"type":"text","text":"making the backend hard to switch for developers."}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyWidget"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyWidget"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView/layoutableChildren(backend:children:)":{"role":"symbol","url":"\/documentation\/swiftcrossui\/emptyview\/layoutablechildren(backend:children:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"layoutableChildren"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Backend"},{"kind":"text","text":">("},{"kind":"externalParam","text":"backend"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Backend"},{"kind":"text","text":", "},{"kind":"externalParam","text":"children"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"ViewGraphNodeChildren","preciseIdentifier":"s:12SwiftCrossUI21ViewGraphNodeChildrenP"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"LayoutSystem","preciseIdentifier":"s:12SwiftCrossUI12LayoutSystemO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"LayoutableChild","preciseIdentifier":"s:12SwiftCrossUI12LayoutSystemO15LayoutableChildV"},{"kind":"text","text":"]"}],"type":"topic","abstract":[],"title":"layoutableChildren(backend:children:)","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView\/layoutableChildren(backend:children:)"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView/update(_:children:proposedSize:environment:backend:dryRun:)":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView\/update(_:children:proposedSize:environment:backend:dryRun:)","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"update","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Backend","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Backend","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Widget","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI10AppBackendP6WidgetQa"},{"text":", ","kind":"text"},{"text":"children","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"ViewGraphNodeChildren","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI21ViewGraphNodeChildrenP"},{"text":", ","kind":"text"},{"text":"proposedSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SIMD2","kind":"typeIdentifier","preciseIdentifier":"s:s5SIMD2V"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">, ","kind":"text"},{"text":"environment","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EnvironmentValues","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI17EnvironmentValuesV"},{"text":", ","kind":"text"},{"text":"backend","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Backend","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"dryRun","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"ViewUpdateResult","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI16ViewUpdateResultV"}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftcrossui\/emptyview\/update(_:children:proposedsize:environment:backend:dryrun:)","type":"topic","title":"update(_:children:proposedSize:environment:backend:dryRun:)"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"url":"\/documentation\/swiftcrossui","type":"topic","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","title":"SwiftCrossUI","kind":"symbol","role":"collection"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView/children(backend:snapshots:environment:)":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView\/children(backend:snapshots:environment:)","type":"topic","title":"children(backend:snapshots:environment:)","url":"\/documentation\/swiftcrossui\/emptyview\/children(backend:snapshots:environment:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"children"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Backend"},{"kind":"text","text":">("},{"kind":"externalParam","text":"backend"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Backend"},{"kind":"text","text":", "},{"kind":"externalParam","text":"snapshots"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:12SwiftCrossUI20ViewGraphSnapshotterV","kind":"typeIdentifier","text":"ViewGraphSnapshotter"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12SwiftCrossUI20ViewGraphSnapshotterV12NodeSnapshotV","kind":"typeIdentifier","text":"NodeSnapshot"},{"kind":"text","text":"]?, "},{"kind":"externalParam","text":"environment"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12SwiftCrossUI17EnvironmentValuesV","kind":"typeIdentifier","text":"EnvironmentValues"},{"kind":"text","text":") -> any "},{"preciseIdentifier":"s:12SwiftCrossUI21ViewGraphNodeChildrenP","kind":"typeIdentifier","text":"ViewGraphNodeChildren"}],"role":"symbol","kind":"symbol","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView/asWidget(_:backend:)":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView\/asWidget(_:backend:)","abstract":[],"title":"asWidget(_:backend:)","type":"topic","url":"\/documentation\/swiftcrossui\/emptyview\/aswidget(_:backend:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asWidget","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Backend","kind":"genericParameter"},{"text":">(any ","kind":"text"},{"text":"ViewGraphNodeChildren","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI21ViewGraphNodeChildrenP"},{"text":", ","kind":"text"},{"text":"backend","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Backend","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Backend","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Widget","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI10AppBackendP6WidgetQa"}],"role":"symbol","kind":"symbol"},"doc://SwiftCrossUI/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/SwiftCrossUI\/s8SendableP","type":"unresolvable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView/body":{"title":"body","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Never","preciseIdentifier":"s:s5NeverO","kind":"typeIdentifier"}],"abstract":[],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView\/body","url":"\/documentation\/swiftcrossui\/emptyview\/body","type":"topic","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize":{"abstract":[{"type":"text","text":"The size of a view. Includes ideal size, and minimum\/maximum width and height"},{"type":"text","text":" "},{"type":"text","text":"along with the size you’d expect."}],"navigatorTitle":[{"kind":"identifier","text":"ViewSize"}],"url":"\/documentation\/swiftcrossui\/viewsize","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewSize"}],"type":"topic","title":"ViewSize","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutSystem"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LayoutSystem"}],"url":"\/documentation\/swiftcrossui\/layoutsystem","title":"LayoutSystem"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"abstract":[{"text":"A view that can be rendered by any backend.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"View","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}],"title":"View","url":"\/documentation\/swiftcrossui\/view","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView/init()":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView\/init()","role":"symbol","title":"init()","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"Creates a placeholder view (will crash if used in a "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","isActive":true},{"type":"text","text":" that doesn’t override the default"},{"type":"text","text":" "},{"type":"text","text":"widget creation code, not intended for regular use)."}],"url":"\/documentation\/swiftcrossui\/emptyview\/init()"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder":{"role":"symbol","type":"topic","kind":"symbol","title":"ViewBuilder","abstract":[{"type":"text","text":"A result builder used to compose views together into composite views in"},{"type":"text","text":" "},{"type":"text","text":"a declarative manner."}],"navigatorTitle":[{"kind":"identifier","text":"ViewBuilder"}],"url":"\/documentation\/swiftcrossui\/viewbuilder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewBuilder"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","title":"body","defaultImplementations":1,"url":"\/documentation\/swiftcrossui\/view\/body","required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa","text":"Content","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The view’s contents."}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol":{"url":"\/documentation\/swiftcrossui\/publishedmarkerprotocol","role":"symbol","navigatorTitle":[{"text":"PublishedMarkerProtocol","kind":"identifier"}],"abstract":[{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":" values nested within an "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":" object"},{"type":"text","text":" "},{"type":"text","text":"will only have their changes published by the parent "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":" "},{"type":"text","text":"if marked with this marker protocol. This avoids uncertainty around which"},{"type":"text","text":" "},{"type":"text","text":"properties will or will not have their changes published by the parent."},{"type":"text","text":" "},{"type":"text","text":"For clarity reasons, you shouldn’t conform your own types to this protocol."},{"type":"text","text":" "},{"type":"text","text":"Instead, apply the "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","isActive":true},{"type":"text","text":" property wrapper when needed."}],"kind":"symbol","type":"topic","title":"PublishedMarkerProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PublishedMarkerProtocol","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene-graph":{"type":"topic","title":"Scene graph","role":"collectionGroup","url":"\/documentation\/swiftcrossui\/scene-graph","abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph","kind":"article"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View-graph":{"role":"collectionGroup","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","url":"\/documentation\/swiftcrossui\/view-graph","title":"View graph","kind":"article","type":"topic","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"title":"HotReloadableView","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HotReloadableView","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/hotreloadableview","abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"navigatorTitle":[{"text":"HotReloadableView","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"role":"symbol","url":"\/documentation\/swiftcrossui\/observableobject","title":"ObservableObject","abstract":[{"type":"text","text":"An object that can be observed for changes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView":{"kind":"symbol","url":"\/documentation\/swiftcrossui\/emptyview","abstract":[{"text":"A placeholder view used by elementary ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","isActive":true,"type":"reference"},{"text":" implementations which don’t have bodies. Fatally","type":"text"},{"text":" ","type":"text"},{"text":"crashes if rendered.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","navigatorTitle":[{"text":"EmptyView","kind":"identifier"}],"title":"EmptyView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmptyView","kind":"identifier"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView/View-Implementations":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView\/View-Implementations","abstract":[],"url":"\/documentation\/swiftcrossui\/emptyview\/view-implementations","role":"collectionGroup","kind":"article","type":"topic","title":"View Implementations"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView":{"url":"\/documentation\/swiftcrossui\/eitherview","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","abstract":[{"type":"text","text":"A view used by "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","type":"reference","isActive":true},{"type":"text","text":" to support if\/else conditional statements."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EitherView"}],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EitherView"}],"title":"EitherView"}}}