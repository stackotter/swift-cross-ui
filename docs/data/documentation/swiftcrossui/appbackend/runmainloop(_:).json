{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"runMainLoop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"callback"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" @"},{"kind":"typeIdentifier","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" () -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Runs the backend’s main run loop. The app will exit when this method","type":"text"},{"text":" ","type":"text"},{"text":"returns. This wall always be the first method called by SwiftCrossUI.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The callback is where SwiftCrossUI will create windows, render"},{"type":"text","text":" "},{"type":"text","text":"initial views, start state handlers, etc. The setup action must be"},{"type":"text","text":" "},{"type":"text","text":"run exactly once. The backend must be fully functional before the"},{"type":"text","text":" "},{"type":"text","text":"callback is ready."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is up to the backend to decide whether the callback runs before or"},{"type":"text","text":" "},{"type":"text","text":"after the main loop starts. For example, some backends such as the "},{"type":"codeVoice","code":"AppKit"},{"type":"text","text":" "},{"type":"text","text":"backend can create windows and widgets before the run loop starts, so it"},{"type":"text","text":" "},{"type":"text","text":"makes the most sense to run the setup before the main run loop starts (it’s"},{"type":"text","text":" "},{"type":"text","text":"also not possible to run the setup function once the main run loop starts"},{"type":"text","text":" "},{"type":"text","text":"anyway). On the other side is the "},{"type":"codeVoice","code":"Gtk"},{"type":"text","text":" backend which must be on the"},{"type":"text","text":" "},{"type":"text","text":"main loop to create windows and widgets (because otherwise the root"},{"type":"text","text":" "},{"type":"text","text":"window has not yet been created, which is essential in Gtk), so the"},{"type":"text","text":" "},{"type":"text","text":"setup function is passed to "},{"type":"codeVoice","code":"Gtk"},{"type":"text","text":" as a callback to run once the main"},{"type":"text","text":" "},{"type":"text","text":"run loop starts."}]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/runMainLoop(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Often in UI frameworks (such as Gtk), code is run in a callback"},{"type":"text","text":" "},{"type":"text","text":"after starting the app, and hence this generic root window creation"},{"type":"text","text":" "},{"type":"text","text":"API must reflect that. This is always the first method to be called"},{"type":"text","text":" "},{"type":"text","text":"and is where boilerplate app setup should happen."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/appbackend\/runmainloop(_:)"]}],"metadata":{"remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Backend\/AppBackend.swift#L123","fileName":"AppBackend.swift"},"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"runMainLoop","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"role":"symbol","required":true,"title":"runMainLoop(_:)","symbolKind":"method","externalID":"s:12SwiftCrossUI10AppBackendP11runMainLoopyyyyScMYccF","modules":[{"name":"SwiftCrossUI"}]},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend"]]},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/runMainLoop(_:)":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/runMainLoop(_:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftcrossui\/appbackend\/runmainloop(_:)","abstract":[{"type":"text","text":"Often in UI frameworks (such as Gtk), code is run in a callback"},{"type":"text","text":" "},{"type":"text","text":"after starting the app, and hence this generic root window creation"},{"type":"text","text":" "},{"type":"text","text":"API must reflect that. This is always the first method to be called"},{"type":"text","text":" "},{"type":"text","text":"and is where boilerplate app setup should happen."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"runMainLoop","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"title":"runMainLoop(_:)"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend":{"url":"\/documentation\/swiftcrossui\/appbackend","type":"topic","title":"AppBackend","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppBackend","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"AppBackend","kind":"identifier"}],"abstract":[{"text":"A backend that can be used to run an app. Usually built on top of an","type":"text"},{"text":" ","type":"text"},{"text":"existing UI framework.","type":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"kind":"symbol","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"role":"collection","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","title":"SwiftCrossUI","url":"\/documentation\/swiftcrossui"}}}