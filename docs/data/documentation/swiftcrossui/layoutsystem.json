{"metadata":{"navigatorTitle":[{"text":"LayoutSystem","kind":"identifier"}],"title":"LayoutSystem","remoteSource":{"fileName":"LayoutSystem.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Layout\/LayoutSystem.swift#L1"},"externalID":"s:12SwiftCrossUI12LayoutSystemO","roleHeading":"Enumeration","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LayoutSystem","kind":"identifier"}],"symbolKind":"enum","modules":[{"name":"SwiftCrossUI"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem"},"sections":[],"topicSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem\/LayoutableChild"],"title":"Structures","anchor":"Structures","generated":true},{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem\/updateStackLayout(container:children:proposedSize:environment:backend:dryRun:inheritStackLayoutParticipation:)"],"title":"Type Methods","anchor":"Type-Methods","generated":true}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"]}],"variants":[{"paths":["\/documentation\/swiftcrossui\/layoutsystem"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutSystem"}],"languages":["swift"],"platforms":["macOS"]}]}],"kind":"symbol","references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView":{"abstract":[{"type":"text","text":"A view used by "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","isActive":true},{"type":"text","text":" to support if\/else conditional statements."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","title":"EitherView","type":"topic","url":"\/documentation\/swiftcrossui\/eitherview","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EitherView"}],"navigatorTitle":[{"kind":"identifier","text":"EitherView"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView":{"abstract":[{"text":"A placeholder view used by elementary ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","isActive":true,"type":"reference"},{"text":" implementations which don’t have bodies. Fatally","type":"text"},{"text":" ","type":"text"},{"text":"crashes if rendered.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmptyView","kind":"identifier"}],"title":"EmptyView","role":"symbol","type":"topic","url":"\/documentation\/swiftcrossui\/emptyview","navigatorTitle":[{"text":"EmptyView","kind":"identifier"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View-graph":{"title":"View graph","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","url":"\/documentation\/swiftcrossui\/view-graph","abstract":[],"kind":"article","role":"collectionGroup","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem/updateStackLayout(container:children:proposedSize:environment:backend:dryRun:inheritStackLayoutParticipation:)":{"url":"\/documentation\/swiftcrossui\/layoutsystem\/updatestacklayout(container:children:proposedsize:environment:backend:dryrun:inheritstacklayoutparticipation:)","role":"symbol","type":"topic","title":"updateStackLayout(container:children:proposedSize:environment:backend:dryRun:inheritStackLayoutParticipation:)","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem\/updateStackLayout(container:children:proposedSize:environment:backend:dryRun:inheritStackLayoutParticipation:)","abstract":[],"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateStackLayout","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Backend","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"container","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Backend","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Widget","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI10AppBackendP6WidgetQa"},{"text":", ","kind":"text"},{"text":"children","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"LayoutSystem","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI12LayoutSystemO"},{"text":".","kind":"text"},{"text":"LayoutableChild","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI12LayoutSystemO15LayoutableChildV"},{"text":"], ","kind":"text"},{"text":"proposedSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SIMD2","kind":"typeIdentifier","preciseIdentifier":"s:s5SIMD2V"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">, ","kind":"text"},{"text":"environment","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EnvironmentValues","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI17EnvironmentValuesV"},{"text":", ","kind":"text"},{"text":"backend","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Backend","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"dryRun","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"inheritStackLayoutParticipation","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"ViewUpdateResult","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI16ViewUpdateResultV"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView":{"title":"OptionalView","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A view used by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder"},{"type":"text","text":" to support non-exhaustive if statements."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalView"}],"navigatorTitle":[{"kind":"identifier","text":"OptionalView"}],"url":"\/documentation\/swiftcrossui\/optionalview","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"navigatorTitle":[{"kind":"identifier","text":"Published"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","url":"\/documentation\/swiftcrossui\/published","abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference","isActive":true},{"type":"text","text":", its "},{"code":"didChange","type":"codeVoice"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"title":"Published","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem/LayoutableChild":{"kind":"symbol","role":"symbol","url":"\/documentation\/swiftcrossui\/layoutsystem\/layoutablechild","navigatorTitle":[{"text":"LayoutableChild","kind":"identifier"}],"abstract":[],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem\/LayoutableChild","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LayoutableChild","kind":"identifier"}],"title":"LayoutSystem.LayoutableChild"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"type":"topic","navigatorTitle":[{"text":"DynamicProperty","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","role":"symbol","url":"\/documentation\/swiftcrossui\/dynamicproperty","kind":"symbol","title":"DynamicProperty","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicProperty","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper updated by the view graph before each access to"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","isActive":true},{"type":"text","text":". Conforming types should use internal mutability (see "},{"type":"codeVoice","code":"Box"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"to implement this protocol’s non-mutable methods if required. This"},{"type":"text","text":" "},{"type":"text","text":"protocol avoids mutation to allow state properties and such to be"},{"type":"text","text":" "},{"type":"text","text":"captured even though views are structs."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","kind":"symbol","url":"\/documentation\/swiftcrossui\/layoutsystem","title":"LayoutSystem","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutSystem"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LayoutSystem"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize":{"role":"symbol","abstract":[{"text":"The size of a view. Includes ideal size, and minimum\/maximum width and height","type":"text"},{"text":" ","type":"text"},{"text":"along with the size you’d expect.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewSize","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftcrossui\/viewsize","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","navigatorTitle":[{"text":"ViewSize","kind":"identifier"}],"title":"ViewSize","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"url":"\/documentation\/swiftcrossui\/view","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A view that can be rendered by any backend."}],"title":"View","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","role":"symbol","navigatorTitle":[{"text":"View","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol":{"title":"PublishedMarkerProtocol","navigatorTitle":[{"kind":"identifier","text":"PublishedMarkerProtocol"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublishedMarkerProtocol"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","kind":"symbol","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":" values nested within an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":" object"},{"type":"text","text":" "},{"type":"text","text":"will only have their changes published by the parent "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":" "},{"type":"text","text":"if marked with this marker protocol. This avoids uncertainty around which"},{"type":"text","text":" "},{"type":"text","text":"properties will or will not have their changes published by the parent."},{"type":"text","text":" "},{"type":"text","text":"For clarity reasons, you shouldn’t conform your own types to this protocol."},{"type":"text","text":" "},{"type":"text","text":"Instead, apply the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"},{"type":"text","text":" property wrapper when needed."}],"role":"symbol","url":"\/documentation\/swiftcrossui\/publishedmarkerprotocol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","url":"\/documentation\/swiftcrossui","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"kind":"symbol","type":"topic","role":"collection","title":"SwiftCrossUI"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult":{"title":"ViewUpdateResult","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewUpdateResult"}],"abstract":[],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","navigatorTitle":[{"kind":"identifier","text":"ViewUpdateResult"}],"url":"\/documentation\/swiftcrossui\/viewupdateresult"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"role":"symbol","abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"navigatorTitle":[{"kind":"identifier","text":"HotReloadableView"}],"title":"HotReloadableView","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","url":"\/documentation\/swiftcrossui\/hotreloadableview","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HotReloadableView"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"An object that can be observed for changes."}],"url":"\/documentation\/swiftcrossui\/observableobject","title":"ObservableObject","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder":{"url":"\/documentation\/swiftcrossui\/viewbuilder","abstract":[{"text":"A result builder used to compose views together into composite views in","type":"text"},{"text":" ","type":"text"},{"text":"a declarative manner.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewBuilder"}],"navigatorTitle":[{"kind":"identifier","text":"ViewBuilder"}],"title":"ViewBuilder","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene-graph":{"url":"\/documentation\/swiftcrossui\/scene-graph","type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph","title":"Scene graph","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyWidget","kind":"identifier"}],"abstract":[{"text":"A type-erased widget which can be stored without having to propagate","type":"text"},{"text":" ","type":"text"},{"text":"the selected backend type through the type system of the whole view graph","type":"text"},{"text":" ","type":"text"},{"text":"system of types, which would leak it back into user view implementations","type":"text"},{"text":" ","type":"text"},{"text":"making the backend hard to switch for developers.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","title":"AnyWidget","navigatorTitle":[{"text":"AnyWidget","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","url":"\/documentation\/swiftcrossui\/anywidget"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"defaultImplementations":1,"abstract":[{"text":"The view’s contents.","type":"text"}],"title":"body","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","url":"\/documentation\/swiftcrossui\/view\/body","required":true,"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Content","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa"}],"type":"topic"}}}